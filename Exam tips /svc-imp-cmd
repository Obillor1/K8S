#Create a Service named redis-service of type ClusterIP to expose pod redis on port 6379
  kubectl expose pod redis --port=6379 --name redis-service --dry-run=client -o yaml

#Create a Service named nginx-service of type NodePort to expose pod nginx's port 80 on port 30080 on the nodes:
  kubectl expose pod nginx --type=NodePort --port=80 --name=nginx-service --dry-run=client -o yaml

  kubectl expose pod nginx --type=NodePort --name=nginx-service --port=80 --target-port=80 --node-port=30080

  After creating this, go into the pod and make changes to nodePort: 30080

  kubectl expose pod redis --name=redis-service --port=6379

DNS-RESOLVER
+++++++++++++

Create a pod, expose the pod internally and use a busybox image to resolve the servicename
K run test-nslookup --image=busybox:1.28 --rm -it --restart=Never -- nslookup dns-resolver-service  (This pod will be created, it will remove it once work is done. Also do not restart the pod once its done.



JSONPATH
+++++++++
kubectl get nodes -o=jsonpath="{.items[*]['metadata.name', 'status.nodeInfo.osImage']}"
kubectl get nodes -o=jsonpath="{.items[*]['status.nodeInfo.osImage']}"

OR

kubectl get nodes -o=jsonpath="{.items[*].status.nodeInfo.osImage']}"


journalctl -u -f


The rest of them , around 5, will take up the bulk of your time.

Focus areas are:

Volumes -- PVs, PVCs, SCs

RBAC -- know how to verify once you provision them

Network Policies -- my Achilles heel

Services (especially NodePorts)

Upgrade a node to a target version

Troubleshoot "unready" nodes:

                log into the failed node

                systemctl daemon-reload

                systemctl restart kubelet



#Option 1

sudo systemctl enable kubelet --now (will enable and force start)

#Option 2

sudo systemctl enable kubelet

sudo systemctl start kubelet

Go back to the control and wait a few seconds to check the cluster health again.







Monitoring and logging -- easy

Sidecars -- really struggled with this one

ETCD backup and restore

Deployment scaling and recording

Draining nodes

STUDY
+++++++++
Taint and Toleration
HPA
Config Map
Side Car
Event logs
Ingress Controller
Init Container
